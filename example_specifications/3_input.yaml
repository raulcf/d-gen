---
# Example for creating PK-FK relationships
database:
  databaseName: "3_input"
  randomSeed: 1
  postgres:
    # Postgres script will be written to ~/Downloads/3_input
    parentDirectory: "~/Downloads"
    # Creates file and writes metadata to ~/Downloads/3_input_metadata.json
    metadataOutputPath: "~/Downloads/3_input_metadata.json"
  tables:
    - defTable:
        numRows: 10
        tableID: 1
        columns:
          - primaryKey:
              columnID: 1
              dataType:
                int: {}
          - defForeignKey:
              columnID: 2
    - defTable:
        numRows: 10
        tableID: 2
        columns:
          - primaryKey:
              columnID: 1
              dataType:
                int: {}
          - defForeignKey:
              columnID: 2
    - defTable:
        numRows: 10
        tableID: 3
        columns:
          - primaryKey:
              columnID: 1
              dataType:
                int: {}
          - defForeignKey:
              columnID: 2
    - genTable:
        numTables: 50
        columns:
          - primaryKey:
              columnID: 1
              dataType:
                int: {}
          - genForeignKey:
              numColumns: 1
  # 3 defined PK-FK relationships and 50 random ones
  databaseRelationships:
    - defPKFK:
        pkfkMappings:
          - "1:1": "2:2"
          - "1:1": "3:2" # :P You'll be able to map primary keys to a set of foreign keys in the future
          - "2:1": "1:2"
    - genPKFK:
        numRelationships: 50
        graph:
          randomGraph: {}